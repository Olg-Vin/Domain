version: '3.8'

services:
    postgres:
        image: postgres:16
        container_name: postgres
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: product_db
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            - "5432:5432"

    domain-service:
        image: domain-service:latest
        build:
            context: Domain-service
            dockerfile: Dockerfile
        container_name: domain-service
        ports:
            - "8081:8081"
            - "50051:50051"

    gateway:
        image: gateway:latest
        build:
            context: Gateway
            dockerfile: Dockerfile
        container_name: gateway
        ports:
            - "8080:8080"

    rabbitmq:
        image: rabbitmq:management
        container_name: rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        ports:
            - "5672:5672"
            - "15672:15672"

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: admin
        ports:
            - "8090:80"
        depends_on:
            - postgres
        volumes:
            - pgadmin_data:/var/lib/pgadmin

    redis:
        image: redis:7.0
        container_name: redis
        ports:
            - "6379:6379"
        restart: always
        command: [ "redis-server", "--appendonly", "yes" ] # Включение режима сохранения данных

    elasticsearch:
        image: elasticsearch:8.8.0
        container_name: elasticsearch
        restart: unless-stopped
        ports:
            - "9200:9200"
        environment:
            discovery.type: single-node
            xpack.security.enrollment.enabled: "true"
            xpack.security.enabled: "false"
            ES_JAVA_OPTS: "-Xms512m -Xmx512m"

    kibana:
        image: kibana:8.8.0
        container_name: kibana
        environment:
            - 'ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]'
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch

    logstash:
        image: logstash:8.8.0
        container_name: logstash
        ports:
            - "5044:5044"   # Filebeat input
            - "5000:5000"   # TCP input
        environment:
            LS_JAVA_OPTS: "-Xms512m -Xmx512m"
        volumes:
            - ./logstash/pipeline:/usr/share/logstash/pipeline
        depends_on:
            - elasticsearch
            - rabbitmq

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"

    grafana:
        image: grafana/grafana
        container_name: grafana
        ports:
            - "3000:3000"
        environment:
            GF_SECURITY_ADMIN_PASSWORD: "admin"

volumes:
    pgadmin_data:
        driver: local
